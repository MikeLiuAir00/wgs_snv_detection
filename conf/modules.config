/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // global default params for proccess
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    // nf-core default don't touch them
    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }


    // default modules settings
    // fastqc
    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FASTP {
        errorStrategy  = {task.exitStatus == 255 ? 'ignore':'retry'}
        publishDir = [
            [
                path: { "${params.outdir}/fastp/report" },
                mode: params.publish_dir_mode,
                pattern: '*.json'
            ],
            [
                path: { "${params.outdir}/fastp/report" },
                mode: params.publish_dir_mode,
                pattern: '*.html'
            ],
            [
                path: { "${params.outdir}/fastp/report" },
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ],
            [
                path: { "/public/Bio/Bio_data/Armeniaca_Resequencing/JZP202302GM011-01/cleaned" },
                mode: params.publish_dir_mode,
                pattern: '*fastp.fastq.gz'
            ]
        ]
        ext.args = '-q 20'
    }
    // bwa
    //  cmd = 'bwa mem -M -R \"@RG\\tID:{name}\\tLB:DNA\\tSM:{name}\\tPL:illumina\" \
    //          -T 30 -A 1 -B 4 -O 4 -E 1 -L 5 -U 17 -k 20 \
    //          -t {map_thread} {ref} {outdir}/01.clean_fq/{name}.clean.R1.fastq.gz {outdir}/01.clean_fq/{name}.clean.R2.fastq.gz > {outdir}/02.mapping/{name}.sam'

    // minimap2
    withName: MINIMAP2_INDEX {
        publishDir = [
            path: { "${params.outdir}/minimap2/ref_idx" },
            mode: params.publish_dir_mode,
            pattern: '*.mmi'
        ]
    }
    withName: MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/minimap2" },
            mode: params.publish_dir_mode,
            pattern: '*.sorted.bam'
        ]
        ext.args = '-x sr'
        ext.prefix = { "${meta.id}.sorted" }
    }

    // samtools
    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted" }
    }

    // gatk
    withName: GATK4_CREATESEQUENCEDICTIONARY {
        publishDir = [
            path: { "${params.outdir}/gatk" },
            mode: params.publish_dir_mode,
            pattern: '*.dict'
        ]
    }
    withName: ADDREADGROUPS {
        publishDir = [
            path: { "${params.outdir}/gatk/bams" },
            mode: params.publish_dir_mode,
            pattern: '*.bam'
        ]
    }
    withName: MARKDUPLICATE {
        publishDir = [
            [
                path: { "${params.outdir}/gatk/bams" },
                mode: params.publish_dir_mode,
                pattern: '*.dup.bam'
            ],
            [
                path: { "${params.outdir}/gatk/index" },
                mode: params.publish_dir_mode,
                pattern: ['*.bai', '*.sbi']

            ],
            [
                path: { "${params.outdir}/gatk/metrics" },
                mode: params.publish_dir_mode,
                pattern: '*.txt'
            ]
        ]
        ext.prefix = { "${meta.id}.dup" }
        ext.args = "--tmp-dir '$projectDir/.tmp' --conf 'spark.executor.cores=24'"
    }
    withName: HAPLOTYPECALLER {
        maxForks = 10
        publishDir = [
            [
                path: { "${params.outdir}/gatk/haplotypecaller" },
                mode: params.publish_dir_mode,
                pattern: '*.vcf.gz'
            ],
            [
                path: { "${params.outdir}/gatk/haplotypecaller" },
                mode: params.publish_dir_mode,
                pattern: '*.tbi'
            ]
        ]
    }
    withName: GATK4_GENOMICSDBIMPORT {
        maxForks = 4
        ext.args = "--max-num-intervals-to-import-in-parallel 3"
    }
    withName: GATK4_GENOTYPEGVCFS {
        maxForks = 4
    }
    withName: APPLYBQSR {
        ext.prefix = { "${meta.id}.bqsr" }
    }
    // Custom module setting

    // GATK4 SelectVariant
    withName: SELECT_SNP {
        maxForks = 10
        ext.args = "-select-type SNP"
        ext.prefix = { "${meta.id}_snp" }
    }
    withName: SELECT_INDEL {
        maxForks = 10
        ext.args = "-select-type INDEL"
        ext.prefix = { "${meta.id}_indel" }
    }
    withName: FILTER_SNP {
        maxForks = 10
        ext.prefix = { "${meta.id}_${meta.type}" }
        ext.args = """ \
        -filter-name 'QD_filter' -filter 'QD < 2.0' \
        -filter-name 'FS_filter' -filter 'FS > 60.0' \
        -filter-name 'MQ_filter' -filter 'MQ < 40.0' \
        -filter-name 'SOR_filter' -filter 'SOR > 4.0' \
        -filter-name 'MQRankSum_filter' -filter 'MQRankSum < -12.5' \
        -filter-name 'ReadPosRankSum_filter' -filter 'ReadPosRankSum < -8.0'
        """
    }
    withName: FILTER_INDEL {
        maxForks = 10
        ext.prefix = { "${meta.id}_${meta.type}" }
        ext.args = """ \
        -filter-name 'QD_filter' -filter 'QD < 2.0' \
        -filter-name 'FS_filter' -filter 'FS > 200.0' \
        -filter-name 'SOR_filter' -filter 'SOR > 10.0'
        """
    }
    withName: DROPFILTEREDSNP {
        maxForks = 10
        ext.prefix = { "${meta.id}_${meta.type}.filtered" }
        ext.args = "--exclude-filtered"
    }
    withName: DROPFILTEREDINDEL {
        maxForks = 10
        ext.prefix = { "${meta.id}_${meta.type}.filtered" }
        ext.args = "--exclude-filtered"
    }
    withName: VARIANTTOTABLE {
        maxForks = 10
        ext.prefix = { "${meta.id}_${meta.type}" }
        ext.args = """ \
                    --show-filtered \
                    -F CHROM -F POS -F TYPE -F FILTER -F QD -F FS -F MQ -F SOR \
                    -F MQRankSum -F ReadPosRankSum \
                """
    }
    withName: MERGESNP{
        ext.prefix = { "${meta.id}" }
    }
    withName: MERGESNP{
        ext.prefix = { "${meta.id}" }
    }
}
